module Components {
    @ Component to blink an LED driven by a rate group
    active component Led {

        @ Command to turn the LED on or off
        async command LED_ON_OFF(
            on_off: Fw.On
        )

        @ Indicates we received an invalid argument.
        event InvalidLedArgument(badArgument: Fw.On) \
            severity warning low \
            format "Invalid LED Argument: {}"

        @ Event to set the LED state
        event SetLedState(state: Fw.On) \
            severity activity high \
            format "Set LED state to {}."

        @ Event to set the LED hue
        event SetHue(interval: U32) \
            severity activity high \
            format "LED hue set to {}"
        
        @ Event to indicate the LED status
        event LedStatus(on_off: Fw.On) \
            severity activity low \
            format "LED is {}"
        
        @ Telemetry channel to report blinking state.
        telemetry LedStatus: Fw.On

        @ Hue interval in rate group ticks
        param LED_HUE: U32

        @ Port sending calls to the GPIO driver
        output port gpioSet: Drv.GpioWrite

        ###############################################################################
        # Standard AC Ports: Required for Channels, Events, Commands, and Parameters  #
        ###############################################################################
        @ Port for requesting the current time
        time get port timeCaller

        @ Port for sending command registrations
        command reg port cmdRegOut

        @ Port for receiving commands
        command recv port cmdIn

        @ Port for sending command responses
        command resp port cmdResponseOut

        @ Port for sending textual representation of events
        text event port logTextOut

        @ Port for sending events to downlink
        event port logOut

        @ Port for sending telemetry channels to downlink
        telemetry port tlmOut

        @ Port to return the value of a parameter
        param get port prmGetOut

        @Port to set the value of a parameter
        param set port prmSetOut

    }
}
